"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/scrape/route";
exports.ids = ["app/api/scrape/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("puppeteer");;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=C%3A%5CUsers%5Cansht%5COneDrive%5CDesktop%5CMyPythonScripts%5CWebpage%5Cproduct-search-compare%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cansht%5COneDrive%5CDesktop%5CMyPythonScripts%5CWebpage%5Cproduct-search-compare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=C%3A%5CUsers%5Cansht%5COneDrive%5CDesktop%5CMyPythonScripts%5CWebpage%5Cproduct-search-compare%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cansht%5COneDrive%5CDesktop%5CMyPythonScripts%5CWebpage%5Cproduct-search-compare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_ansht_OneDrive_Desktop_MyPythonScripts_Webpage_product_search_compare_app_api_scrape_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/scrape/route.ts */ \"(rsc)/./app/api/scrape/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([C_Users_ansht_OneDrive_Desktop_MyPythonScripts_Webpage_product_search_compare_app_api_scrape_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\nC_Users_ansht_OneDrive_Desktop_MyPythonScripts_Webpage_product_search_compare_app_api_scrape_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/scrape/route\",\n        pathname: \"/api/scrape\",\n        filename: \"route\",\n        bundlePath: \"app/api/scrape/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\ansht\\\\OneDrive\\\\Desktop\\\\MyPythonScripts\\\\Webpage\\\\product-search-compare\\\\app\\\\api\\\\scrape\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_ansht_OneDrive_Desktop_MyPythonScripts_Webpage_product_search_compare_app_api_scrape_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/scrape/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzY3JhcGUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnNjcmFwZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnNjcmFwZSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNhbnNodCU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q015UHl0aG9uU2NyaXB0cyU1Q1dlYnBhZ2UlNUNwcm9kdWN0LXNlYXJjaC1jb21wYXJlJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNhbnNodCU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q015UHl0aG9uU2NyaXB0cyU1Q1dlYnBhZ2UlNUNwcm9kdWN0LXNlYXJjaC1jb21wYXJlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNpRTtBQUM5STtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2R1Y3Qtc2VhcmNoLWNvbXBhcmUvPzcwYzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcYW5zaHRcXFxcT25lRHJpdmVcXFxcRGVza3RvcFxcXFxNeVB5dGhvblNjcmlwdHNcXFxcV2VicGFnZVxcXFxwcm9kdWN0LXNlYXJjaC1jb21wYXJlXFxcXGFwcFxcXFxhcGlcXFxcc2NyYXBlXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zY3JhcGUvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zY3JhcGVcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3NjcmFwZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGFuc2h0XFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcTXlQeXRob25TY3JpcHRzXFxcXFdlYnBhZ2VcXFxccHJvZHVjdC1zZWFyY2gtY29tcGFyZVxcXFxhcHBcXFxcYXBpXFxcXHNjcmFwZVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvc2NyYXBlL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=C%3A%5CUsers%5Cansht%5COneDrive%5CDesktop%5CMyPythonScripts%5CWebpage%5Cproduct-search-compare%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cansht%5COneDrive%5CDesktop%5CMyPythonScripts%5CWebpage%5Cproduct-search-compare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/scrape/route.ts":
/*!*********************************!*\
  !*** ./app/api/scrape/route.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([puppeteer__WEBPACK_IMPORTED_MODULE_1__]);\npuppeteer__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst GOTO_TIMEOUT = 40000;\nasync function scrapeAmazon(term) {\n    console.log(`🔍 Starting Amazon scrape for: \"${term}\"`);\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_1__[\"default\"].launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-web-security\"\n            ]\n        });\n        console.log(\"✅ Amazon browser launched successfully\");\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        const url = `https://www.amazon.in/s?k=${encodeURIComponent(term)}`;\n        console.log(`🌐 Amazon URL: ${url}`);\n        try {\n            await page.goto(url, {\n                waitUntil: \"networkidle2\",\n                timeout: GOTO_TIMEOUT\n            });\n            console.log(\"✅ Amazon page loaded\");\n        } catch (err) {\n            console.error(\"❌ Amazon page navigation error (timeout or blocked):\", err.message);\n            await browser.close();\n            return [];\n        }\n        const results = await page.evaluate(()=>{\n            console.log(\"\\uD83D\\uDD0D Evaluating Amazon page...\");\n            let items = [];\n            const selectors = [\n                '[data-component-type=\"s-search-result\"]',\n                \".s-result-item\",\n                '[data-asin]:not([data-asin=\"\"])',\n                \".puis-card-container\"\n            ];\n            for (const selector of selectors){\n                items = Array.from(document.querySelectorAll(selector));\n                console.log(`Selector \"${selector}\" found ${items.length} items`);\n                if (items.length > 0) break;\n            }\n            if (items.length === 0) {\n                console.log(\"❌ No items found with any selector\");\n                return [];\n            }\n            return items.slice(0, 10).map((item, index)=>{\n                console.log(`Processing Amazon item ${index + 1}`);\n                let title = \"\";\n                const titleSelectors = [\n                    \"h2 a span\",\n                    '[data-cy=\"title-recipe\"] span',\n                    \".a-size-medium span\",\n                    \".a-text-normal\"\n                ];\n                for (const selector of titleSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.textContent?.trim()) {\n                        title = element.textContent.trim();\n                        break;\n                    }\n                }\n                let link = \"\";\n                const linkSelectors = [\n                    \"h2 a\",\n                    'a[href*=\"/dp/\"]',\n                    \".a-link-normal\"\n                ];\n                for (const selector of linkSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.getAttribute(\"href\")) {\n                        const href = element.getAttribute(\"href\");\n                        link = href.startsWith(\"http\") ? href : `https://www.amazon.in${href}`;\n                        break;\n                    }\n                }\n                let price = \"Price not available\";\n                const priceSelectors = [\n                    \".a-price .a-offscreen\",\n                    \".a-price-whole\",\n                    '[data-cy=\"price-recipe\"] .a-price .a-offscreen'\n                ];\n                for (const selector of priceSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.textContent?.trim()) {\n                        price = element.textContent.trim();\n                        if (selector === \".a-price-whole\") {\n                            const fraction = item.querySelector(\".a-price-fraction\")?.textContent || \"\";\n                            price = `₹${price}${fraction}`;\n                        }\n                        break;\n                    }\n                }\n                let rating = \"N/A\";\n                const ratingSelectors = [\n                    \".a-icon-alt\",\n                    'span[aria-hidden=\"true\"]',\n                    '[data-cy=\"reviews-block\"] span'\n                ];\n                for (const selector of ratingSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.textContent) {\n                        const text = element.textContent.trim();\n                        const ratingMatch = text.match(/(\\d+\\.?\\d*)/);\n                        if (ratingMatch && parseFloat(ratingMatch[1]) <= 5) {\n                            rating = ratingMatch[1];\n                            break;\n                        }\n                    }\n                }\n                const thumbnailElement = item.querySelector(\"img.s-image\") || item.querySelector(\"img\");\n                const thumbnail = thumbnailElement?.getAttribute(\"src\") || \"\";\n                const result = {\n                    platform: \"Amazon.in\",\n                    platformLogo: \"\\uD83D\\uDED2\",\n                    productName: title,\n                    price: price,\n                    rating: rating,\n                    link: link,\n                    thumbnail: thumbnail,\n                    discount: null,\n                    availability: \"Available\"\n                };\n                return result;\n            }).filter((item)=>item.productName && item.link);\n        });\n        console.log(`✅ Amazon results: ${results.length} items found`);\n        await browser.close();\n        return results;\n    } catch (error) {\n        console.error(\"❌ Amazon scraping error:\", error.message);\n        if (browser) await browser.close();\n        return [];\n    }\n}\nasync function scrapeFlipkart(term) {\n    console.log(`🔍 Starting Flipkart scrape for: \"${term}\"`);\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_1__[\"default\"].launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-web-security\"\n            ]\n        });\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        const url = `https://www.flipkart.com/search?q=${encodeURIComponent(term)}`;\n        console.log(`🌐 Flipkart URL: ${url}`);\n        try {\n            await page.goto(url, {\n                waitUntil: \"networkidle2\",\n                timeout: GOTO_TIMEOUT\n            });\n            console.log(\"✅ Flipkart page loaded\");\n        } catch (err) {\n            console.error(\"❌ Flipkart page navigation error (timeout or blocked):\", err.message);\n            await browser.close();\n            return [];\n        }\n        const results = await page.evaluate(()=>{\n            console.log(\"\\uD83D\\uDD0D Evaluating Flipkart page...\");\n            const items = Array.from(document.querySelectorAll(\"[data-id]\"));\n            console.log(`Found ${items.length} Flipkart items`);\n            return items.slice(0, 10).map((item, index)=>{\n                const titleElement = item.querySelector(\".wjcEIp\");\n                const title = titleElement?.textContent?.trim() || titleElement?.getAttribute(\"title\")?.trim() || \"\";\n                const linkElement = item.querySelector(\".wjcEIp\");\n                const href = linkElement?.getAttribute(\"href\") || \"\";\n                const link = href ? `https://www.flipkart.com${href}` : \"\";\n                const priceElement = item.querySelector(\".Nx9bqj\");\n                const price = priceElement?.textContent?.trim() || \"Price not available\";\n                const ratingElement = item.querySelector(\".XQDdHH\");\n                const ratingCountElement = item.querySelector(\".Wphh3N\");\n                let rating = \"N/A\";\n                if (ratingElement && ratingCountElement) {\n                    const ratingValue = ratingElement.textContent?.trim() || \"\";\n                    const ratingCount = ratingCountElement.textContent?.trim().replace(/[()]/g, \"\") || \"\";\n                    rating = `${ratingValue} (${ratingCount})`;\n                } else if (ratingElement) {\n                    rating = ratingElement.textContent?.trim() || \"N/A\";\n                }\n                const thumbnailElement = item.querySelector(\".DByuf4\");\n                const thumbnail = thumbnailElement?.getAttribute(\"src\") || \"\";\n                return {\n                    platform: \"Flipkart\",\n                    platformLogo: \"\\uD83D\\uDECD️\",\n                    productName: title,\n                    price: price,\n                    rating: rating,\n                    link: link,\n                    thumbnail: thumbnail,\n                    discount: null,\n                    availability: \"Available\"\n                };\n            }).filter((item)=>item.productName && item.link);\n        });\n        console.log(`✅ Flipkart results: ${results.length} items found`);\n        await browser.close();\n        return results;\n    } catch (error) {\n        console.error(\"❌ Flipkart scraping error:\", error.message);\n        if (browser) await browser.close();\n        return [];\n    }\n}\nasync function scrapeMeesho(term, page = 1) {\n    console.log(`🔍 Starting Meesho scrape for: \"${term}\" (Page ${page})`);\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_1__[\"default\"].launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-web-security\"\n            ]\n        });\n        const browserPage = await browser.newPage();\n        await browserPage.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        const url = `https://www.meesho.com/search?q=${encodeURIComponent(term)}&page=${page}`;\n        console.log(`🌐 Meesho URL: ${url}`);\n        try {\n            await browserPage.goto(url, {\n                waitUntil: \"networkidle2\",\n                timeout: GOTO_TIMEOUT\n            });\n            console.log(\"✅ Meesho page loaded\");\n        } catch (err) {\n            console.error(\"❌ Meesho page navigation error (timeout or blocked):\", err.message);\n            await browser.close();\n            return [];\n        }\n        const results = await browserPage.evaluate(()=>{\n            const items = Array.from(document.querySelectorAll(\".ProductListItem__GridCol-sc-1baba2g-0\"));\n            console.log(`Found ${items.length} Meesho items`);\n            return items.slice(0, 10).map((item, index)=>{\n                const titleElement = item.querySelector(\".NewProductCardstyled__StyledDesktopProductTitle-sc-6y2tys-5\") || item.querySelector('p[color=\"greyT2\"]');\n                const title = titleElement?.textContent?.trim() || \"\";\n                const linkElement = item.querySelector(\"a[href]\");\n                const href = linkElement?.getAttribute(\"href\") || \"\";\n                const link = href ? `https://www.meesho.com${href}` : \"\";\n                const priceElement = item.querySelector('h5[color=\"greyBase\"]') || item.querySelector(\".sc-eDvSVe.dwCrSh\");\n                const price = priceElement?.textContent?.trim() || \"Price not available\";\n                const ratingElement = item.querySelector('.Rating__StyledPill-sc-12htng8-1 span[color=\"#ffffff\"]');\n                const ratingCountElement = item.querySelector(\".NewProductCardstyled__RatingCount-sc-6y2tys-22\");\n                let rating = \"N/A\";\n                if (ratingElement && ratingCountElement) {\n                    const ratingValue = ratingElement.textContent?.trim() || \"\";\n                    const ratingCount = ratingCountElement.textContent?.trim().replace(\" Reviews\", \"\") || \"\";\n                    rating = `${ratingValue} (${ratingCount})`;\n                } else if (ratingElement) {\n                    rating = ratingElement.textContent?.trim() || \"N/A\";\n                }\n                const thumbnailElement = item.querySelector(\"img[alt]\");\n                const thumbnail = thumbnailElement?.getAttribute(\"src\") || \"\";\n                return {\n                    platform: \"Meesho\",\n                    platformLogo: \"\\uD83D\\uDECD️\",\n                    productName: title,\n                    price: price,\n                    rating: rating,\n                    link: link,\n                    thumbnail: thumbnail,\n                    discount: null,\n                    availability: \"Available\"\n                };\n            }).filter((item)=>item.productName && item.link);\n        });\n        console.log(`✅ Meesho results: ${results.length} items found`);\n        await browser.close();\n        return results;\n    } catch (error) {\n        console.error(\"❌ Meesho scraping error:\", error.message);\n        if (browser) await browser.close();\n        return [];\n    }\n}\nasync function scrapeSnapdeal(term, page = 1) {\n    console.log(`🔍 Starting Snapdeal scrape for: \"${term}\" (Page ${page})`);\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_1__[\"default\"].launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-web-security\"\n            ]\n        });\n        const browserPage = await browser.newPage();\n        await browserPage.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        const url = `https://www.snapdeal.com/search?keyword=${encodeURIComponent(term)}&noOfResults=20&page=${page}`;\n        console.log(`🌐 Snapdeal URL: ${url}`);\n        try {\n            await browserPage.goto(url, {\n                waitUntil: \"networkidle2\",\n                timeout: GOTO_TIMEOUT\n            });\n            console.log(\"✅ Snapdeal page loaded\");\n        } catch (err) {\n            console.error(\"❌ Snapdeal page navigation error (timeout or blocked):\", err.message);\n            await browser.close();\n            return [];\n        }\n        const results = await browserPage.evaluate(()=>{\n            const items = Array.from(document.querySelectorAll(\".product-tuple-listing\"));\n            console.log(`Found ${items.length} Snapdeal items`);\n            return items.slice(0, 10).map((item, index)=>{\n                const titleElement = item.querySelector(\".product-title\");\n                const title = titleElement?.textContent?.trim() || titleElement?.getAttribute(\"title\")?.trim() || \"\";\n                const linkElement = item.querySelector(\".dp-widget-link\");\n                const href = linkElement?.getAttribute(\"href\") || \"\";\n                const link = href || \"\";\n                const priceElement = item.querySelector(\".product-price\");\n                const price = priceElement?.textContent?.trim() || \"Price not available\";\n                let rating = \"N/A\";\n                const filledStars = item.querySelector(\".filled-stars\");\n                const ratingCountElement = item.querySelector(\".product-rating-count\");\n                if (filledStars && ratingCountElement) {\n                    const widthPercent = filledStars.style.width?.replace(\"%\", \"\");\n                    if (widthPercent) {\n                        const ratingValue = (parseFloat(widthPercent) / 20).toFixed(1);\n                        const ratingCount = ratingCountElement.textContent?.trim().replace(/[()]/g, \"\") || \"\";\n                        rating = `${ratingValue} (${ratingCount})`;\n                    }\n                } else if (filledStars) {\n                    const widthPercent = filledStars.style.width?.replace(\"%\", \"\");\n                    if (widthPercent) {\n                        const ratingValue = (parseFloat(widthPercent) / 20).toFixed(1);\n                        rating = ratingValue;\n                    }\n                }\n                let thumbnail = \"\";\n                const thumbnailElement = item.querySelector(\".product-tuple-image img\") || item.querySelector(\"img.product-image\") || item.querySelector(\"picture img\");\n                if (thumbnailElement) {\n                    thumbnail = thumbnailElement.getAttribute(\"src\") || thumbnailElement.getAttribute(\"data-src\") || thumbnailElement.getAttribute(\"srcset\")?.split(\" \")[0] || \"\";\n                }\n                return {\n                    platform: \"Snapdeal\",\n                    platformLogo: \"\\uD83D\\uDED2\",\n                    productName: title,\n                    price: price,\n                    rating: rating,\n                    link: link,\n                    thumbnail: thumbnail,\n                    discount: null,\n                    availability: \"Available\"\n                };\n            }).filter((item)=>item.productName && item.link);\n        });\n        console.log(`✅ Snapdeal results: ${results.length} items found`);\n        await browser.close();\n        return results;\n    } catch (error) {\n        console.error(\"❌ Snapdeal scraping error:\", error.message);\n        if (browser) await browser.close();\n        return [];\n    }\n}\nasync function scrapeJioMartProductRating(productUrl, browser) {\n    try {\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        await page.goto(productUrl, {\n            waitUntil: \"networkidle2\",\n            timeout: 10000\n        });\n        const ratingInfo = await page.evaluate(()=>{\n            const averageRatingElement = document.querySelector(\"#average\");\n            const ratingValue = averageRatingElement?.textContent?.trim() || \"N/A\";\n            const totalRatingElement = document.querySelector(\"#total_rating\");\n            const reviewCount = totalRatingElement?.textContent?.trim() || \"0\";\n            return {\n                rating: ratingValue,\n                reviewCount: reviewCount\n            };\n        });\n        await page.close();\n        return ratingInfo;\n    } catch (error) {\n        console.error(`❌ Error fetching rating from ${productUrl}:`, error.message);\n        return {\n            rating: \"N/A\",\n            reviewCount: \"0\"\n        };\n    }\n}\nasync function scrapeJioMart(term, page = 1) {\n    console.log(`🔍 Starting JioMart scrape for: \"${term}\" (Page ${page})`);\n    let browser;\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_1__[\"default\"].launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-web-security\"\n            ]\n        });\n        const browserPage = await browser.newPage();\n        await browserPage.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        const url = `https://www.jiomart.com/search/${encodeURIComponent(term)}`;\n        console.log(`🌐 JioMart URL: ${url}`);\n        try {\n            await browserPage.goto(url, {\n                waitUntil: \"networkidle2\",\n                timeout: GOTO_TIMEOUT\n            });\n            console.log(\"✅ JioMart page loaded\");\n        } catch (err) {\n            console.error(\"❌ JioMart page navigation error (timeout or blocked):\", err.message);\n            await browser.close();\n            return [];\n        }\n        const basicResults = await browserPage.evaluate(()=>{\n            const items = Array.from(document.querySelectorAll(\".ais-InfiniteHits-item, .plp-card-wrapper\"));\n            return items.slice(0, 10).map((item, index)=>{\n                const titleElement = item.querySelector(\".plp-card-details-name\") || item.querySelector(\"a[title]\");\n                const title = titleElement?.textContent?.trim() || titleElement?.getAttribute(\"title\")?.trim() || \"\";\n                const linkElement = item.querySelector(\"a[href]\");\n                const href = linkElement?.getAttribute(\"href\") || \"\";\n                const link = href.startsWith(\"http\") ? href : `https://www.jiomart.com${href}`;\n                let price = \"Price not available\";\n                const priceElement = item.querySelector(\".plp-card-details-price .jm-heading-xxs\");\n                if (priceElement) {\n                    price = priceElement.textContent?.trim() || \"Price not available\";\n                }\n                let discount = null;\n                const discountElement = item.querySelector(\".jm-badge\");\n                if (discountElement) {\n                    discount = discountElement.textContent?.trim() || null;\n                }\n                let thumbnail = \"\";\n                const thumbnailElement = item.querySelector(\".plp-card-image img\") || item.querySelector(\"img[alt]\");\n                if (thumbnailElement) {\n                    thumbnail = thumbnailElement.getAttribute(\"src\") || thumbnailElement.getAttribute(\"data-src\") || \"\";\n                }\n                return {\n                    platform: \"JioMart\",\n                    platformLogo: \"\\uD83D\\uDED2\",\n                    productName: title,\n                    price: price,\n                    rating: \"N/A\",\n                    link: link,\n                    thumbnail: thumbnail,\n                    discount: discount,\n                    availability: \"Available\"\n                };\n            }).filter((item)=>item.productName && item.link);\n        });\n        const resultsWithRatings = await Promise.all(basicResults.map(async (product)=>{\n            if (product.link && product.link.includes(\"jiomart.com\")) {\n                const ratingInfo = await scrapeJioMartProductRating(product.link, browser);\n                const finalRating = ratingInfo.rating !== \"N/A\" && ratingInfo.reviewCount !== \"0\" ? `${ratingInfo.rating} (${ratingInfo.reviewCount})` : ratingInfo.rating;\n                return {\n                    ...product,\n                    rating: finalRating\n                };\n            }\n            return product;\n        }));\n        await browserPage.close();\n        console.log(`✅ JioMart results: ${resultsWithRatings.length} items found with ratings`);\n        await browser.close();\n        return resultsWithRatings;\n    } catch (error) {\n        console.error(\"❌ JioMart scraping error:\", error.message);\n        if (browser) await browser.close();\n        return [];\n    }\n}\n// 🔥 FIXED: PayTM Mall scraping function with corrected URL\nasync function scrapePaytmMall(term, page = 1) {\n    console.log(`🔍 Starting PayTM Mall scrape for: \"${term}\" (Page ${page})`);\n    let browser;\n    let rawHtml = \"\";\n    try {\n        browser = await puppeteer__WEBPACK_IMPORTED_MODULE_1__[\"default\"].launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-web-security\"\n            ]\n        });\n        const browserPage = await browser.newPage();\n        await browserPage.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n        // 🔥 FIXED: Changed URL from /search to /shop/search based on schema markup\n        const url = `https://paytmmall.com/shop/search?q=${encodeURIComponent(term)}`;\n        console.log(`🌐 PayTM Mall URL (FIXED): ${url}`);\n        try {\n            await browserPage.goto(url, {\n                waitUntil: \"networkidle2\",\n                timeout: GOTO_TIMEOUT\n            });\n            console.log(\"✅ PayTM Mall page loaded\");\n            // Capture raw HTML for debugging\n            rawHtml = await browserPage.content();\n            //   console.log(`📄 PayTM Mall page content length: ${rawHtml.length} characters`);\n            // Check page title to see if we reached the right page\n            const pageTitle = await browserPage.title();\n        //   console.log(`📖 PayTM Mall page title: \"${pageTitle}\"`);\n        // Save HTML to file for inspection\n        //   fs.writeFileSync('paytm-debug.html', rawHtml);\n        //   console.log('💾 PayTM Mall HTML saved as paytm-debug.html');\n        } catch (err) {\n            console.error(\"❌ PayTM Mall page navigation error (timeout or blocked):\", err.message);\n            await browser.close();\n            return {\n                results: [],\n                rawHtml: err.message\n            };\n        }\n        const results = await browserPage.evaluate(()=>{\n            console.log(\"\\uD83D\\uDD0D Evaluating PayTM Mall page...\");\n            // Try multiple selectors since the page structure might be different\n            let items = [];\n            const selectors = [\n                \"._3WhJ\",\n                '[data-testid=\"product-item\"]',\n                \".product-item\",\n                \".product-card\",\n                '[class*=\"product\"]'\n            ];\n            for (const selector of selectors){\n                items = Array.from(document.querySelectorAll(selector));\n                console.log(`PayTM Mall selector \"${selector}\" found ${items.length} items`);\n                if (items.length > 0) break;\n            }\n            if (items.length === 0) {\n                console.log(\"❌ No PayTM Mall items found with any selector\");\n                return [];\n            }\n            return items.slice(0, 10).map((item, index)=>{\n                console.log(`Processing PayTM Mall item ${index + 1}`);\n                // Title - try multiple selectors\n                let title = \"\";\n                const titleSelectors = [\n                    \".UGUy\",\n                    \"h3\",\n                    \".product-title\",\n                    \".item-title\",\n                    '[data-testid=\"product-title\"]'\n                ];\n                for (const selector of titleSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.textContent?.trim()) {\n                        title = element.textContent.trim();\n                        console.log(`Found title with selector \"${selector}\": ${title}`);\n                        break;\n                    }\n                }\n                // Link - try multiple selectors\n                let link = \"\";\n                const linkSelectors = [\n                    \"a[href]\",\n                    \".product-link\"\n                ];\n                for (const selector of linkSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.getAttribute(\"href\")) {\n                        const href = element.getAttribute(\"href\");\n                        link = href.startsWith(\"http\") ? href : `https://paytmmall.com${href}`;\n                        console.log(`Found link with selector \"${selector}\": ${link}`);\n                        break;\n                    }\n                }\n                // Price - try multiple selectors\n                let price = \"Price not available\";\n                const priceSelectors = [\n                    \"._1kMS span\",\n                    \".price\",\n                    \".product-price\",\n                    '[data-testid=\"price\"]',\n                    \".current-price\"\n                ];\n                for (const selector of priceSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.textContent?.trim()) {\n                        const priceText = element.textContent.trim();\n                        const priceMatch = priceText.match(/(\\d+)/);\n                        if (priceMatch) {\n                            price = `₹${priceMatch[1]}`;\n                            console.log(`Found price with selector \"${selector}\": ${price}`);\n                            break;\n                        }\n                    }\n                }\n                // Discount - try multiple selectors\n                let discount = null;\n                const discountSelectors = [\n                    \".c-ax\",\n                    \".discount\",\n                    \".offer\",\n                    \".sale-price\"\n                ];\n                for (const selector of discountSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.textContent?.trim()) {\n                        discount = element.textContent.trim();\n                        console.log(`Found discount with selector \"${selector}\": ${discount}`);\n                        break;\n                    }\n                }\n                // Thumbnail - try multiple selectors\n                let thumbnail = \"\";\n                const thumbnailSelectors = [\n                    \"img[alt]\",\n                    \"img\",\n                    \".product-image img\",\n                    '[data-testid=\"product-image\"]'\n                ];\n                for (const selector of thumbnailSelectors){\n                    const element = item.querySelector(selector);\n                    if (element?.getAttribute(\"src\")) {\n                        thumbnail = element.getAttribute(\"src\");\n                        console.log(`Found thumbnail with selector \"${selector}\": ${thumbnail}`);\n                        break;\n                    }\n                }\n                const result = {\n                    platform: \"PayTM Mall\",\n                    platformLogo: \"\\uD83D\\uDCB3\",\n                    productName: title,\n                    price: price,\n                    rating: \"N/A\",\n                    link: link,\n                    thumbnail: thumbnail,\n                    discount: discount,\n                    availability: \"Available\"\n                };\n                console.log(`PayTM Mall Item ${index + 1}:`, JSON.stringify(result, null, 2));\n                return result;\n            }).filter((item)=>item.productName && item.link);\n        });\n        console.log(`✅ PayTM Mall results: ${results.length} items found`);\n        await browser.close();\n        return {\n            results,\n            rawHtml\n        };\n    } catch (error) {\n        console.error(\"❌ PayTM Mall scraping error:\", error.message);\n        if (browser) await browser.close();\n        return {\n            results: [],\n            rawHtml: error.message\n        };\n    }\n}\nasync function GET(request) {\n    console.log(\"\\uD83D\\uDE80 API /scrape called\");\n    try {\n        const url = new URL(request.url);\n        const term = url.searchParams.get(\"term\");\n        const page = parseInt(url.searchParams.get(\"page\") || \"1\");\n        if (!term) {\n            console.log(\"❌ No search term provided\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Search term is required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(`🔍 Search term: \"${term}\" (Page ${page})`);\n        const startTime = Date.now();\n        const [amazonResults, flipkartResults, meeshoResults, snapdealResults, jiomartResults, paytmData] = await Promise.all([\n            scrapeAmazon(term),\n            scrapeFlipkart(term),\n            scrapeMeesho(term, page),\n            scrapeSnapdeal(term, page),\n            scrapeJioMart(term, page),\n            scrapePaytmMall(term, page)\n        ]);\n        const endTime = Date.now();\n        const duration = endTime - startTime;\n        const combinedResults = [\n            ...amazonResults,\n            ...flipkartResults,\n            ...meeshoResults,\n            ...snapdealResults,\n            ...jiomartResults,\n            ...paytmData.results || []\n        ];\n        console.log(`✅ Scraping completed in ${duration}ms`);\n        console.log(`📊 Amazon: ${amazonResults.length} results`);\n        console.log(`📊 Flipkart: ${flipkartResults.length} results`);\n        console.log(`📊 Meesho: ${meeshoResults.length} results`);\n        console.log(`📊 Snapdeal: ${snapdealResults.length} results`);\n        console.log(`📊 JioMart: ${jiomartResults.length} results`);\n        console.log(`📊 PayTM Mall: ${paytmData.results?.length || 0} results`);\n        console.log(`📊 Total: ${combinedResults.length} results`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            results: combinedResults,\n            paytmRawHtml: paytmData.rawHtml,\n            meta: {\n                searchTerm: term,\n                duration,\n                page,\n                amazonCount: amazonResults.length,\n                flipkartCount: flipkartResults.length,\n                meeshoCount: meeshoResults.length,\n                snapdealCount: snapdealResults.length,\n                jiomartCount: jiomartResults.length,\n                paytmCount: paytmData.results?.length || 0,\n                total: combinedResults.length,\n                totalPages: Math.max(1, Math.ceil(combinedResults.length / 30))\n            }\n        });\n    } catch (error) {\n        console.error(\"❌ API Error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/scrape/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=C%3A%5CUsers%5Cansht%5COneDrive%5CDesktop%5CMyPythonScripts%5CWebpage%5Cproduct-search-compare%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cansht%5COneDrive%5CDesktop%5CMyPythonScripts%5CWebpage%5Cproduct-search-compare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();